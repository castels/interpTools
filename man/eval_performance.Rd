% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eval_performance.R
\name{eval_performance}
\alias{eval_performance}
\title{Evaluate Interpolation Performance of a Single Time Series}
\usage{
eval_performance(x, X, gappyx, custom = NULL)
}
\arguments{
\item{x}{\code{numeric}; The \strong{original} time series vector.}

\item{X}{\code{numeric}; The \strong{interpolated} time series vector.}

\item{gappyx}{\code{numeric}; The \strong{gappy} time series vector. Gaps must be indicated by \code{NA}.}

\item{custom}{\code{character}; A set of names of user-defined functions used to calculate custom performance metrics (see example)}
}
\description{
Function to define and store performance criteria for the comparison of a single interpolated series with its original. Vectors must be conforming in value, except at indices where missing observations have been interpolated. Subroutine of \code{performance()}.
}
\details{
The following is a description of the list of performance metrics that are generated: \cr
\tabular{ccc}{
     ID \tab Criterion \tab Optimal \cr
     ...... \tab ........... \tab ......... \cr
     1 \tab  pearson_r \tab max  \cr
     2 \tab  r_squared \tab max  \cr
     3 \tab  AD \tab min  \cr
     4 \tab  MBE \tab min  \cr
     5 \tab  ME \tab min  \cr
     6 \tab  MAE \tab min  \cr
     7 \tab  MRE \tab min  \cr
     8 \tab  MARE \tab min  \cr
     9 \tab  MAPE \tab min  \cr
     10 \tab  SSE \tab min  \cr
     11 \tab  MSE \tab min  \cr
     12 \tab  RMS \tab min  \cr
     13 \tab  NMSE \tab min  \cr
     14 \tab  RE \tab max  \cr
     15 \tab  RMSE \tab min  \cr
     16 \tab  NRMSD \tab min  \cr
     17 \tab  RMSS \tab min  \cr
     18 \tab  MdAPE \tab min  \cr
   }

Users can define and pass-in their own custom performance metric functions, but must adhere to the following rules:
\itemize{
  \item Inputs are limited to *ONLY* \code{x} (the original time series) and \code{X} (the interpolated time series)\cr
  \item Output must be a single numeric value\cr
  }
}
\examples{
 # User-defined function to calculate a custom performance metric
 ## Functions must contain two arguments: x (the original series)
 my_metric1 <- function(x,X){
 
  # Sum of original + interpolated values
  
  val <- x + X
  
  return(val) # return value must be a single numeric element
  
  }
  
 # User-defined function to calculate a custom performance metric
  
 my_metric2 <- function(x,X){
 
  # Sum of index positions of interpolated values
 
  val <- sum(which(x != X))
 
  return(val) # return value must be a single numeric element
 
 } 
 
 # Implementing in eval_performance()
 
 eval_performance(x = x, X = X, gappyx = gappyx, custom = c("my_metric1", "my_metric2"))
 


}
